---
- name: Download pyenv-installer if not exists
  connection: local
  get_url:
    url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
    dest: "/tmp"
    mode: "0755"
    force: false

- name: Install pyenv by pyenv-installer
  script: /tmp/pyenv-installer
  args:
    executable: /bin/bash
    creates: "{{ pyenv_root }}"

- name: Setting pyenv in profile files
  blockinfile:
    path: "{{ item }}"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init --path)"
  loop:
    - "{{ ansible_env.HOME }}/.bashrc"
    - "{{ ansible_env.HOME }}/.profile"
    - "{{ ansible_env.HOME }}/.zprofile"

- name: Update apt cache and install dependencies
  become: true
  apt:
    update_cache: true
    pkg:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev

- name: Create ~/.pyenv/cache if not exists
  file:
    path: "{{ pyenv_cache }}"
    state: directory
    mode: "0755"

- name: Install python3
  shell: |
    eval "$(pyenv init --path)"
    pyenv install {{ python_default_version }}
    pyenv global {{ python_default_version }}
  args:
    executable: /bin/bash
    creates: "{{ python_path }}"

- name: Install and upgrade python tools
  pip:
    name: 
      - pip
      - setuptools
      - poetry
    state: latest
    executable: "{{ pip_path }}"
